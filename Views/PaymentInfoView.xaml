<UserControl
    x:Class="LuxuryCarRental.Views.PaymentInfoView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="500"
    d:DesignWidth="700"
    Background="{StaticResource LightBackgroundBrush}">

    <UserControl.Resources>
        <!-- 1) If you actually need BoolToVis, define it here: -->
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <!-- 2) A style that targets StackPanel only -->
        <Style x:Key="ShowWhenEditing" TargetType="StackPanel">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsAddingOrEditingCard}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 3) A style that targets CheckBox only -->
        <Style x:Key="DisableWhenNoSelection" TargetType="Button">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedCard}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 4) A style that targets TextBox only (no mismatches) -->
        <Style x:Key="MyTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="4"/>
        </Style>
    </UserControl.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Debug/info text -->
            <RowDefinition Height="Auto"/>
            <!-- SavedCards ListBox -->
            <RowDefinition Height="Auto"/>
            <!-- Add/Delete buttons -->
            <RowDefinition Height="Auto"/>
            <!-- Separator -->
            <RowDefinition Height="Auto"/>
            <!-- Add/Edit panel -->
            <RowDefinition Height="*"/>
            <!-- Error message / filler -->
        </Grid.RowDefinitions>

        <!-- 1) Debug TextBlock (no mismatches: this style is for TextBlock) -->
        <TextBlock
            Grid.Row="0"
            FontStyle="Italic"
            Foreground="DarkBlue"
            Text="PanelOpen: {Binding IsAddingOrEditingCard}"
            Margin="0,0,0,12" />

        <!-- 2) Saved Cards ListBox -->
        <ListBox
            Grid.Row="1"
            ItemsSource="{Binding SavedCards}"
            SelectedItem="{Binding SelectedCard, Mode=TwoWay}"
            DisplayMemberPath="Nickname"
            Height="100"
            Margin="0,0,0,12" />

        <!-- 3) Add / Delete Buttons -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,12">
            <!-- Add Card (SecondaryButton style assumed already defined elsewhere) -->
            <Button
                Content="Add Card"
                Command="{Binding BeginAddCardCommand}"
                Style="{StaticResource SecondaryButton}"
                Width="80"
                Margin="0,0,12,0" />

            <!-- Delete Card: uses DisableWhenNoSelection (only 1 style!) -->
            <Button
                Content="Delete Card"
                Command="{Binding DeleteCardCommand}"
                Style="{StaticResource DisableWhenNoSelection}"
                Width="80" />
        </StackPanel>

        <!-- 4) Horizontal separator -->
        <Separator Grid.Row="3" Margin="0,0,0,12" />

        <!-- 5) Add/Edit Card Panel: 
               - This is a StackPanel, so we use ShowWhenEditing (TargetType=StackPanel).
               - We bind to a bool → but convert it to Visibility via BoolToVis (which is now declared). -->
        <Border
            Grid.Row="4"
            Padding="12"
            BorderBrush="Gray"
            BorderThickness="1"
            Background="#FFF9F9F9"
            Visibility="{Binding IsAddingOrEditingCard, Converter={StaticResource BoolToVis}}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <!-- Card Number -->
                    <RowDefinition Height="Auto"/>
                    <!-- Expiry -->
                    <RowDefinition Height="Auto"/>
                    <!-- CVV -->
                    <RowDefinition Height="Auto"/>
                    <!-- Save / Cancel buttons -->
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Card Number -->
                <TextBlock Text="Card Number:" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,8,8" />
                <TextBox
                    Grid.Row="0"
                    Grid.Column="1"
                    Style="{StaticResource MyTextBoxStyle}"
                    Text="{Binding NewCardNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="0,0,0,8" />

                <!-- Expiry -->
                <TextBlock Text="Expiry (MM/YY):" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,8,8" />
                <TextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Style="{StaticResource MyTextBoxStyle}"
                    Text="{Binding NewExpiry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="0,0,0,8" />

                <!-- CVV -->
                <TextBlock Text="CVV:" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,8,8" />
                <TextBox
                    Grid.Row="2"
                    Grid.Column="1"
                    Style="{StaticResource MyTextBoxStyle}"
                    Text="{Binding NewCvv, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="0,0,0,8" />

                <!-- Save / Cancel Buttons -->
                <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,8,0,0">
                    <Button 
                        Content="Save" 
                        Command="{Binding SaveCardCommand}" 
                        Style="{StaticResource SecondaryButton}" 
                        Width="80" 
                        Margin="0,0,8,0" />
                    <Button 
                        Content="Cancel" 
                        Command="{Binding CancelCardCommand}" 
                        Style="{StaticResource SecondaryButton}" 
                        Width="80" />
                </StackPanel>
            </Grid>
        </Border>

        <!-- 6) Error Message (just a normal TextBlock, no converter needed) -->
        <TextBlock 
            Grid.Row="5"
            Text="{Binding ErrorMessage}"
            Foreground="Red"
            Margin="0,8,0,0"/>
    </Grid>
</UserControl>
